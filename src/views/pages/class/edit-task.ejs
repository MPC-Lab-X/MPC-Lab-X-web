<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../components/head.ejs") %>
  <script src="/js/class.js"></script>
  <title>MPC Lab | Edit Task</title>
</head>

<body>
  <%- include("../../components/classroom-sidebar.ejs", { classId }) %>

  <main class="sm:ml-64 p-6">
    <h1 class="text-3xl font-semibold mb-6">Edit Task</h1>

    <!-- Task settings section -->
    <div class="mt-8 p-6 bg-background-50 shadow-md rounded-lg">
      <h2 class="text-xl font-bold mb-4">Task Settings</h2>

      <!-- Task Name Input -->
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700">Task Name</label>
        <input id="task-name" type="text" class="p-3 border border-gray-300 rounded-md w-full mt-1" placeholder="Enter task name" />
        <button id="save-task-name" class="mt-2 bg-primary-500 text-white px-4 py-2 rounded hover:bg-primary-400 transition duration-200">
          Save Task Name
        </button>
      </div>

      <!-- Task Description Input -->
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700">Task Description</label>
        <textarea id="task-description" class="p-3 border border-gray-300 rounded-md w-full mt-1" placeholder="Enter task description"></textarea>
        <button id="save-task-description" class="mt-2 bg-primary-500 text-white px-4 py-2 rounded hover:bg-primary-400 transition duration-200">
          Save Task Description
        </button>
      </div>

      <!-- Delete Task Button -->
      <button id="delete-task" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-500 transition duration-200">
        Delete Task
      </button>
    </div>
  </main>

  <script>
    // Initialize classroom module
    const classroom = new Classroom(app);

    // Fetch class details
    classroom.getClass("<%= classId %>").then((response) => {
      if (response.status === "success") {
        const students = response.data.students.filter((student) => !student.deleted);
        document.title = `MPC Lab | Edit Task - ${response.data.name}`;

        // Update student and admin counts
        const studentsCount = document.getElementById("students-count");
        const adminsCount = document.getElementById("admins-count");
        studentsCount.textContent = students.length;
        adminsCount.textContent = response.data.admins.length;
        studentsCount.classList.remove("hidden");
        adminsCount.classList.remove("hidden");
      } else {
        // Handle errors
        if (response.error.code === "CLASS_NOT_FOUND" || response.error.code === "INVALID_CLASS_ID") {
          app.location.showNotFound();
        } else if (response.error.code === "ACCESS_DENIED") {
          app.location.showForbidden();
        }
      }
    });

    // Fetch task details
    classroom.getTask("<%= taskId %>").then((response) => {
      if (response.status === "success") {
        document.getElementById("task-name").value = response.data.name;
        document.getElementById("task-description").value = response.data.description;
      } else {
        // Handle errors
        if (response.error.code === "TASK_NOT_FOUND" || response.error.code === "CLASS_NOT_FOUND") {
          app.location.showNotFound();
        } else if (response.error.code === "ACCESS_DENIED") {
          app.location.showForbidden();
        }
      }
    });

    // Save task name
    const saveTaskNameButton = document.getElementById("save-task-name");
    saveTaskNameButton.addEventListener("click", () => {
      const taskName = document.getElementById("task-name").value;
      classroom.renameTask("<%= taskId %>", taskName).then((response) => {
        app.ui.notification(
          "alert",
          response.message,
          response.status === "success" ? "success" : "error",
          saveTaskNameButton.parentElement,
          "rename-task"
        );
      });
    });

    // Save task description
    const saveTaskDescriptionButton = document.getElementById("save-task-description");
    saveTaskDescriptionButton.addEventListener("click", () => {
      const taskDescription = document.getElementById("task-description").value;
      classroom.updateTaskDescription("<%= taskId %>", taskDescription).then((response) => {
        app.ui.notification(
          "alert",
          response.message,
          response.status === "success" ? "success" : "error",
          saveTaskDescriptionButton.parentElement,
          "update-task-description"
        );
      });
    });

    // Delete task
    const deleteTaskButton = document.getElementById("delete-task");
    deleteTaskButton.addEventListener("click", () => {
      classroom.deleteTask("<%= taskId %>").then((response) => {
        app.ui.notification(
          "alert",
          response.message,
          response.status === "success" ? "success" : "error",
          deleteTaskButton.parentElement,
          "delete-task"
        );

        // Redirect to tasks list after a delay if the deletion was successful
        if (response.status === "success") {
          setTimeout(() => {
            app.location.redirect(`/classrooms/${response.data.classId}/tasks`);
          }, 2000);
        }
      });
    });
  </script>
</body>

</html>