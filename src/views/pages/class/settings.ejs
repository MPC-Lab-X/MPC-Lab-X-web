<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../components/head.ejs") %>
  <script src="/js/class.js"></script>
  <title>MPC Lab | Classroom Settings</title>
</head>

<body>
  <%- include("../../components/classroom-sidebar.ejs", { classId }) %>
  <main class="sm:ml-64 p-6">
    <h1 class="text-2xl font-semibold mb-6">Classroom Settings</h1>

    <div class="bg-background-50 shadow-md rounded-lg p-6 max-w-lg">
      <h2 class="text-xl font-bold mb-4 text-primary-500">Classroom Details</h2>

      <div class="mb-4">
        <label for="class-name" class="block text-sm font-medium text-text">Classroom Name</label>
        <input type="text" id="class-name" placeholder="Enter classroom name" class="mt-1 block w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500" />
      </div>

      <div class="mb-4">
        <label for="class-code" class="block text-sm font-medium text-text">Classroom Code</label>
        <input type="text" id="class-code" value="<%= classId %>" readonly class="mt-1 block w-full p-3 border border-gray-300 bg-gray-100 rounded-md cursor-not-allowed" />
      </div>

      <div class="flex justify-between mt-6">
        <button id="save-settings" class="bg-primary-500 text-white px-4 py-2 rounded hover:bg-primary-400 transition-colors duration-200">Save Changes</button>
        <button id="delete-class" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-400 transition-colors duration-200">Delete Classroom</button>
      </div>
    </div>
  </main>
  <script>
    const classroom = new Classroom(app);

    classroom.getClass("<%= classId %>").then((response) => {
      if (response.status === "success") {
        const students = response.data.students.filter((student) => !student.deleted);

        document.title = `MPC Lab | Classroom Settings - ${response.data.name}`;
        document.getElementById("classroom-name").textContent = response.data.name;
        const studentsCount = document.getElementById("students-count");
        const adminsCount = document.getElementById("admins-count");
        studentsCount.textContent = students.length;
        adminsCount.textContent = response.data.admins.length;
        studentsCount.classList.remove("hidden");
        adminsCount.classList.remove("hidden");

        document.getElementById("class-name").value = response.data.name;
      } else {
        if (response.error.code === "CLASS_NOT_FOUND" || response.error.code === "INVALID_CLASS_ID") {
          app.location.showNotFound();
        } else if (response.error.code === "ACCESS_DENIED") {
          app.location.showForbidden();
        }
      }
    });

    const saveSettingsButton = document.getElementById("save-settings");
    saveSettingsButton.addEventListener("click", () => {
      const className = document.getElementById("class-name").value;

      classroom.renameClass("<%= classId %>", className).then((response) => {
        if (response.status === "success") {
          app.ui.notification(
            "alert",
            response.message,
            "success",
            saveSettingsButton.parentElement.parentElement,
            "save-settings"
          );
        } else {
          app.ui.notification(
            "alert",
            response.message,
            "error",
            saveSettingsButton.parentElement.parentElement,
            "save-settings"
          );
        }
      });
    });

    const deleteClassButton = document.getElementById("delete-class");
    let unlockDeleteClass = false;
    deleteClassButton.addEventListener("click", () => {
      if (unlockDeleteClass) return;
      deleteClassButton.disabled = true;
      let deleteClassLockTimeout = 30;
      const deleteClassLockTimeoutInterval = setInterval(() => {
        deleteClassButton.textContent = `Available in ${deleteClassLockTimeout}s`;
        deleteClassLockTimeout--;
        if (deleteClassLockTimeout === 0) {
          deleteClassButton.textContent = "Confirm Delete";
          deleteClassButton.classList.remove("bg-red-500");
          deleteClassButton.classList.add("bg-red-700");
          deleteClassButton.disabled = false;
          deleteClassButton.onclick = async () => {
            deleteClassButton.disabled = true;
            deleteClassButton.textContent = "Deleting...";
            const response = await classroom.deleteClass("<%= classId %>");
            if (response.status === "success") {
              app.location.redirect("/classrooms");
            } else {
              deleteClassButton.disabled = false;
              deleteClassButton.textContent = "Delete Classroom";
              app.ui.alert(response.message, "error", 5000);
            }
          };
          clearInterval(deleteClassLockTimeoutInterval);
          unlockDeleteClass = true;
        }
      }, 1000);
    });
  </script>
</body>

</html>